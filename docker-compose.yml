services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: signalradio-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=SignalRadio123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - signalradio-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'SignalRadio123!' -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # SignalRadio API Service
  signalradio-api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    container_name: signalradio-api
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - AzureStorage__ConnectionString=${AzureStorage__ConnectionString}
      - AzureStorage__ContainerName=${AzureStorage__ContainerName}
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=SignalRadio;User Id=sa;Password=SignalRadio123!;TrustServerCertificate=true;
    volumes:
      # Temporary processing (named volume)
      - temp:/app/temp
      # Configuration files (if needed for API settings)
      - ./config:/app/config:ro
    networks:
      - signalradio-network
    depends_on:
      trunk-recorder:
        condition: service_started
      sqlserver:
        condition: service_healthy
    restart: unless-stopped

  # SignalRadio UI Service
  signalradio-ui:
    build:
      context: ./src/SignalRadio.UI
      dockerfile: Dockerfile
    container_name: signalradio-ui
    ports:
      - "3000:80"
    networks:
      - signalradio-network
    depends_on:
      - signalradio-api
    restart: unless-stopped

  # Trunk Recorder Service
  trunk-recorder:
    image: robotastic/trunk-recorder:latest
    container_name: trunk-recorder
    command: ["trunk-recorder", "--config=/app/config/trunk-recorder.json"]
    volumes:
      - /var/run/dbus:/var/run/dbus 
      - /var/run/avahi-daemon/socket:/var/run/avahi-daemon/socket
      # Configuration files (external)
      - ./config:/app/config:ro
      # Scripts (external)
      - ./scripts:/app/scripts:ro
      # Audio recordings (named volume)
      - recordings:/app/audio
      # Temporary processing (named volume)
      - temp:/app/temp
      # Logs
      - logs:/app/logs
    environment:
      - UPLOAD_SCRIPT=/app/scripts/upload_callback.sh
      - API_ENDPOINT=http://signalradio-api:8080/api/recording/upload
    networks:
      - signalradio-network
    restart: unless-stopped
    # Note: trunk-recorder needs RTL-SDR hardware access
    devices:
      - /dev/bus/usb:/dev/bus/usb:rwm
    privileged: true

networks:
  signalradio-network:
    driver: bridge

volumes:
  # Named volumes for persistent data
  recordings:
    driver: local
  temp:
    driver: local
  logs:
    driver: local
  sqlserver-data:
    driver: local
